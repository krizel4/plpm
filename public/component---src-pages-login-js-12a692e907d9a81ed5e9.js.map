{"version":3,"file":"component---src-pages-login-js-12a692e907d9a81ed5e9.js","mappings":"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","sources":["webpack://gatsby-ecommerce-theme/./src/pages/login.js","webpack://gatsby-ecommerce-theme/./src/pages/login.module.css","webpack://gatsby-ecommerce-theme/./src/components/Attribute/Attribute.js","webpack://gatsby-ecommerce-theme/./src/components/Attribute/Attribute.module.css","webpack://gatsby-ecommerce-theme/./src/components/AttributeGrid/AttributeGrid.js","webpack://gatsby-ecommerce-theme/./src/components/AttributeGrid/AttributeGrid.module.css"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link, navigate } from 'gatsby'\nimport { validateEmail, isEmpty } from '../helpers/general'\nimport * as styles from './login.module.css'\n\nimport AttributeGrid from '../components/AttributeGrid/AttributeGrid'\nimport Layout from '../components/Layout/Layout'\nimport FormInputField from '../components/FormInputField/FormInputField'\nimport Button from '../components/Button'\n\nconst LoginPage = (props) => {\n  const initialState = {\n    email: '',\n    password: ''\n  }\n\n  const errorState = {\n    email: '',\n    password: ''\n  }\n\n  const [loginForm, setLoginForm] = useState(initialState)\n  const [errorForm, setErrorForm] = useState(errorState)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  const handleChange = (id, e) => {\n    const tempForm = { ...loginForm, [id]: e }\n    setLoginForm(tempForm)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let validForm = true\n    const tempError = { ...errorForm }\n\n    if (validateEmail(loginForm.email) !== true) {\n      tempError.email =\n        'Please use a valid email address, such as user@example.com.'\n      validForm = false\n    } else {\n      tempError.email = ''\n    }\n\n    if (isEmpty(loginForm.password) === true) {\n      tempError.password = 'Field required'\n      validForm = false\n    } else {\n      tempError.password = ''\n    }\n\n    if (validForm === true) {\n      setErrorForm(errorState)\n\n      // mock login\n      if (loginForm.email !== 'error@example.com') {\n        navigate('/account')\n        window.localStorage.setItem('key', 'sampleToken')\n      } else {\n        window.scrollTo(0, 0)\n        setErrorMessage(\n          'There is no such account associated with this email address'\n        )\n      }\n    } else {\n      setErrorMessage('')\n      setErrorForm(tempError)\n    }\n  }\n\n  return (\n    <Layout disablePaddingBottom={true}>\n      <div\n        className={`${styles.errorContainer} ${\n          errorMessage !== '' ? styles.show : ''\n        }`}\n      >\n        <span className={styles.errorMessage}>{errorMessage}</span>\n      </div>\n\n      <div className={styles.root}>\n        <div className={styles.loginFormContainer}>\n          <h1 className={styles.loginTitle}>Login</h1>\n          <span className={styles.subtitle}>\n            Please enter your e-mail and password\n          </span>\n          <form\n            noValidate\n            className={styles.loginForm}\n            onSubmit={(e) => handleSubmit(e)}\n          >\n            <FormInputField\n              id={'email'}\n              value={loginForm.email}\n              handleChange={(id, e) => handleChange(id, e)}\n              type={'email'}\n              labelName={'Email'}\n              error={errorForm.email}\n            />\n\n            <FormInputField\n              id={'password'}\n              value={loginForm.password}\n              handleChange={(id, e) => handleChange(id, e)}\n              type={'password'}\n              labelName={'Password'}\n              error={errorForm.password}\n            />\n            <div className={styles.forgotPasswordContainer}>\n              <Link to={'/forgot'} className={styles.forgotLink}>\n                Forgot Password\n              </Link>\n            </div>\n\n            <Button fullWidth type={'submit'} level={'primary'}>\n              LOG IN\n            </Button>\n            <span className={styles.createLink}>New Customer? </span>\n            <Button\n              type={'button'}\n              onClick={() => navigate('/signup')}\n              fullWidth\n              level={'secondary'}\n            >\n              create an account\n            </Button>\n          </form>\n        </div>\n\n        <div className={styles.attributeGridContainer}>\n          <AttributeGrid />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default LoginPage\n","// extracted by mini-css-extract-plugin\nexport var attributeGridContainer = \"login-module--attributeGridContainer--fbca3\";\nexport var createLink = \"login-module--createLink--314d0\";\nexport var errorContainer = \"login-module--errorContainer--db152\";\nexport var errorMessage = \"login-module--errorMessage--7eeb2\";\nexport var forgotLink = \"login-module--forgotLink--0d638\";\nexport var forgotPasswordContainer = \"login-module--forgotPasswordContainer--260d5\";\nexport var loginForm = \"login-module--loginForm--7c995\";\nexport var loginFormContainer = \"login-module--loginFormContainer--a1bb8\";\nexport var loginTitle = \"login-module--loginTitle--fd184\";\nexport var root = \"login-module--root--84337\";\nexport var show = \"login-module--show--b12ad\";\nexport var subtitle = \"login-module--subtitle--63321\";","import React from 'react'\n\nimport Icon from '../Icons/Icon'\nimport * as styles from './Attribute.module.css'\n\nconst Attribute = (props) => {\n  const { icon, title, subtitle } = props\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.iconContainer}>\n        <Icon symbol={icon}></Icon>\n      </div>\n      <span className={styles.title}>{title}</span>\n      <span className={styles.subtitle}>{subtitle}</span>\n    </div>\n  )\n}\n\nexport default Attribute\n","// extracted by mini-css-extract-plugin\nexport var iconContainer = \"Attribute-module--iconContainer--81ef8\";\nexport var root = \"Attribute-module--root--d11a4\";\nexport var subtitle = \"Attribute-module--subtitle--6e815\";\nexport var title = \"Attribute-module--title--afe18\";","import React from 'react'\n\nimport Attribute from '../Attribute'\n\nimport * as styles from './AttributeGrid.module.css'\n\nconst AttributeGrid = (props) => {\n  return (\n    <div className={styles.root}>\n      <Attribute\n        icon={'delivery'}\n        title={'free delivery worldwide'}\n        subtitle={'Click to learn more'}\n      />\n      <Attribute\n        icon={'cycle'}\n        title={'returns'}\n        subtitle={'Return goods in 30 days'}\n      />\n      <Attribute\n        icon={'creditcard'}\n        title={'secured payment'}\n        subtitle={'Shop safely'}\n      />\n    </div>\n  )\n}\n\nexport default AttributeGrid\n","// extracted by mini-css-extract-plugin\nexport var root = \"AttributeGrid-module--root--3d4b0\";"],"names":["props","errorState","email","password","loginForm","setLoginForm","useState","errorForm","setErrorForm","errorMessage","setErrorMessage","handleChange","id","e","tempForm","React","Layout","disablePaddingBottom","className","noValidate","onSubmit","preventDefault","validForm","tempError","validateEmail","isEmpty","navigate","window","localStorage","setItem","scrollTo","handleSubmit","FormInputField","value","type","labelName","error","Link","to","Button","fullWidth","level","onClick","AttributeGrid","icon","title","subtitle","Icon","symbol","Attribute"],"sourceRoot":""}